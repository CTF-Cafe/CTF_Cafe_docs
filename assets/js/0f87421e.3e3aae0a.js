"use strict";(self.webpackChunkctf_cafe=self.webpackChunkctf_cafe||[]).push([[337],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),m=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=m(e.components);return a.createElement(o.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=m(n),p=r,g=u["".concat(o,".").concat(p)]||u[p]||d[p]||s;return n?a.createElement(g,i(i({ref:t},c),{},{components:n})):a.createElement(g,i({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,i=new Array(s);i[0]=p;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var m=2;m<s;m++)i[m]=n[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},6114:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>m});var a=n(7462),r=(n(7294),n(3905));const s={sidebar_position:1},i="Validation Schemas",l={unversionedId:"API/utils/schemas",id:"API/utils/schemas",title:"Validation Schemas",description:"backEnd/controllers/validation.js",source:"@site/docs/API/utils/schemas.md",sourceDirName:"API/utils",slug:"/API/utils/schemas",permalink:"/CTF_Cafe_docs/docs/API/utils/schemas",draft:!1,editUrl:"https://github.com/CTF-Cafe/CTF_Cafe_docs/tree/main/docs/API/utils/schemas.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Admin Routes",permalink:"/CTF_Cafe_docs/docs/API/admin"}},o={},m=[{value:"username",id:"username",level:3},{value:"password",id:"password",level:3},{value:"email",id:"email",level:3},{value:"userCategory",id:"usercategory",level:3},{value:"id",id:"id",level:3},{value:"page",id:"page",level:3},{value:"search",id:"search",level:3},{value:"teamName",id:"teamname",level:3},{value:"teamCode",id:"teamcode",level:3},{value:"flag",id:"flag",level:3},{value:"emoji",id:"emoji",level:3}],c={toc:m},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"validation-schemas"},"Validation Schemas"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"backEnd/controllers/validation.js")),(0,r.kt)("h3",{id:"username"},"username"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'username = (id = "username") =>\n  check(id)\n    .notEmpty()\n    .withMessage("must not be empty")\n    .trim()\n    .isLength({ min: 1, max: 32 })\n    .withMessage("must be >1 and <32")\n    .matches(/^[^"$\\n@]+$/)\n    .withMessage("dont use any sus characters");\n')),(0,r.kt)("h3",{id:"password"},"password"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'password = (id = "password") =>\n  check(id)\n    .notEmpty()\n    .withMessage("must not be empty")\n    .trim()\n    .isLength({ min: 8 })\n    .withMessage("must be >8");\n')),(0,r.kt)("h3",{id:"email"},"email"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'email = (id = "email") =>\n  check(id)\n    .notEmpty()\n    .withMessage("must not be empty")\n    .trim()\n    .isEmail()\n    .withMessage("Not a valid Email");\n')),(0,r.kt)("h3",{id:"usercategory"},"userCategory"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'userCategory = (id = "userCategory") =>\n  check(id)\n    .notEmpty()\n    .withMessage("must not be empty")\n    .trim();\n')),(0,r.kt)("h3",{id:"id"},"id"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'id = (id = "id") =>\n  check(id)\n    .notEmpty()\n    .withMessage("must not be empty")\n    .trim()\n    .custom((val) => ObjectId.isValid(val))\n    .withMessage("not a valid ObjectId")\n    .customSanitizer((val) => ObjectId(val));\n')),(0,r.kt)("h3",{id:"page"},"page"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'page = (id = "page") =>\n  check(id)\n    .optional()\n    .default(1)\n    .isInt({ min: 0 })\n    .withMessage("must be an int");\n')),(0,r.kt)("h3",{id:"search"},"search"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'search = (id = "search") =>\n  check(id)\n    .optional()\n    .default("")\n    .isString()\n    .withMessage("must be a string")\n    .customSanitizer((val) => new RegExp(val, "i"));\n')),(0,r.kt)("h3",{id:"teamname"},"teamName"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'teamName = (id = "teamName") =>\n  check(id)\n    .notEmpty()\n    .withMessage("must not be empty")\n    .trim()\n    .isLength({ min: 1, max: 32 })\n    .withMessage("must be >1 and <32")\n    .matches(/^[^"$\\n]+$/)\n    .withMessage("dont use any sus characters");\n')),(0,r.kt)("h3",{id:"teamcode"},"teamCode"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'teamCode = (id = "teamCode") =>\n  check(id)\n    .notEmpty()\n    .withMessage("must not be empty")\n    .trim()\n    .isUUID(4)\n    .withMessage("must be a uuid");\n')),(0,r.kt)("h3",{id:"flag"},"flag"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'flag = (id = "flag") =>\n  check(id)\n    .notEmpty()\n    .withMessage("must not be empty")\n    .trim();\n')),(0,r.kt)("h3",{id:"emoji"},"emoji"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'emoji = (id = "emoji") =>\n  check(id)\n    .notEmpty()\n    .withMessage("must not be empty")\n    .trim()\n    .matches(/^[\\uD83C][\\uDDE6-\\uDDFF][\\uD83C][\\uDDE6-\\uDDFF]$/)\n    .withMessage("must be an emoji!");\n')))}d.isMDXComponent=!0}}]);